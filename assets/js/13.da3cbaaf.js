(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{376:function(t,e,a){"use strict";a.r(e);var s=a(21),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"neovim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#neovim"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://neovim.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("Neovim"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("Hyperextensible Vim-based text editor")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"plugin-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin-manager"}},[t._v("#")]),t._v(" Plugin Manager")]),t._v(" "),a("p",[t._v("There are many plug-in managers for Vim, and Vim also includes it's own plug-in\nmanager, which can be used. However, I recommend using one of these three. They\nare well established, and provide all of the utility the average user will need.\nThe alternatives may be better in specific cases, but for the general user I\nwould recommend to pick one of these three.")]),t._v(" "),a("h3",{attrs:{id:"vim-plug-18-7k"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-plug-18-7k"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/junegunn/vim-plug",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vim-Plug"),a("OutboundLink")],1),t._v(" (18.7k)")]),t._v(" "),a("blockquote",[a("p",[t._v("ðŸŒº Minimalist Vim Plugin Manager")])]),t._v(" "),a("p",[t._v("I prefer to use vim-plug, it is very simple to use, and I have not had any\nissues with it. So if possible use vim-plug. The syntax is very easy to use, it\nutilizes lazy loading when desired, and automatically manages plugins though\ngit or other sources.")]),t._v(" "),a("p",[t._v("I find that Vim-Plug is relatively easy to use, and supports most necessary\nutilities that I want with a plug-in manager, specifically post update commands,\nand asynchronous execution.")]),t._v(" "),a("h4",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n")])])]),a("h4",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" plug#"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~/.config/nvim/Plugged'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  Plug "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sheerun/vim-polyglot'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('" Load plugin from github repo.')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" plug#"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"pathogen-11-3k"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pathogen-11-3k"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/tpope/vim-pathogen",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pathogen"),a("OutboundLink")],1),t._v(" (11.3k)")]),t._v(" "),a("blockquote",[a("p",[t._v("pathogen.vim: manage your runtime path "),a("a",{attrs:{href:"http://www.vim.org/scripts/script.php?script_id=2332",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.vim.org/scripts/script.php?script_id=2332"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("I have never used pathogen.vim, but it is made by tpope, so I imagine that it\nmust be relatively good. However, it is old school, and not nearly has easy to\nuse as some of the alternatives. All plugins, must be manually maintained, such\nthat all plugins are just in a folder called "),a("code",[t._v("~/.vim/bundle")]),t._v(", and any plugins\nin this folder will be loaded.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("Avoid this in preference of managers that will updated and lazy load different\nplugins.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("This is a warning")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("ERROR")]),t._v(" "),a("p",[t._v("This is an error")])]),t._v(" "),a("h4",{attrs:{id:"install-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-2"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p ~/.vim/autoload ~/.vim/bundle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim\n")])])]),a("h4",{attrs:{id:"usage-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-2"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("p",[t._v("Add plugins into "),a("code",[t._v("~/.vim/bundle")]),t._v(", and then they will automatically be loaded.")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("execute pathogen#"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("infect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"vundle-21-2k"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vundle-21-2k"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/VundleVim/Vundle.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vundle"),a("OutboundLink")],1),t._v(" (21.2K)")]),t._v(" "),a("blockquote",[a("p",[t._v("Vundle, the plug-in manager for Vim "),a("a",{attrs:{href:"http://github.com/VundleVim/Vundle.Vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://github.com/VundleVim/Vundle.Vim"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("I have not used Vundle, yet, but it seems relatively good. In general the syntax\nappears to be almost identical to Vim-Plug, and its feature set also seems to be\nabout the same. However, it does have more stars, so it may be something to\nconsider in the future.")]),t._v(" "),a("h4",{attrs:{id:"install-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-3"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n")])])]),a("h4",{attrs:{id:"usage-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-3"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("rtp")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("~"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vim")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bundle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Vundle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vim")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" vundle#"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  Plugin "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sheerun/vim-polyglot'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('" Load plugin from github repo.')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" vundle#"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugins"}},[t._v("#")]),t._v(" Plugins")]),t._v(" "),a("p",[t._v("There are thousands of plugins that can be used with Neovim, but as Vim is a\nvery old editor, many of the plugins have started to age, and new ones are\nconstantly being developed. So here is the list of plugins that I use, and what\nthey are used for.")]),t._v(" "),a("h3",{attrs:{id:"defaults"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defaults"}},[t._v("#")]),t._v(" Defaults")]),t._v(" "),a("h4",{attrs:{id:"vim-kitty-navigator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-kitty-navigator"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/knubie/vim-kitty-navigator",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-kitty-navigator"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("Seamless navigation between kitty panes and vim splits")])]),t._v(" "),a("p",[t._v("When using the Kitty terminal, this plug-in allows easy navigation between Vim\nsplits and kitty windows, all by using the same key bindings. If you are using\nthe kitty terminal, I find this to be a must have, it has greatly improved my\nwork flow.")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("Plug "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'knubie/vim-kitty-navigator'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('" Seamless navigation between kitty panes and vim splits')]),t._v("\n")])])]),a("h4",{attrs:{id:"vim-lastplace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-lastplace"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/farmergreg/vim-lastplace",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-lastplace"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("Intelligently reopen files at your last edit position in Vim. "),a("a",{attrs:{href:"https://www.gregd.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.gregd.org/"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("This plugins just set the cursor to the last place it was in the file, when the\nfile was last opened. This plug-in can roughly be done with a simple Vim script,\nbut this plug-in has some special tools, such that it expands any folds, so that\nthe cursor is visible, and it ignores the last place on temporary files, such as\nversion control messages.")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("Plug "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'farmergreg/vim-lastplace'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('" Intelligently reopen files at your last edit position in Vim')]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);